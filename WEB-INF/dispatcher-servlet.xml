<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<!-- <context:property-placeholder location="classpath:log4j.properties" /> -->

    <context:component-scan  base-package="com.tms" />

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <mvc:annotation-driven />

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations">
	    	<list>
				<!-- This is for Development & Production Server -->
				 <value>file:///opt/properties/environment.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}"/>
         
    </bean>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql:true}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql:true}</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.tms.model</value>
            </list>
        </property>
    </bean>
 
    <bean id="transactionManager"  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- Use this post processor to translate any MongoExceptions thrown in @Repository annotated classes --> 
 	<!-- See more at: http://www.jeroenreijn.com/2011/07/getting-started-with-mongodb-and-spring.html -->
    <bean id="persistenceExceptionTranslationPostProcessor"
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
        
    <!-- Source -->
    <!-- Define the MongoTemplate which handles connectivity with MongoDB -->
	<bean id="mongoTemplate_Source" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongo" ref="mongo_source"/> 
		<constructor-arg name="databaseName" value="CANtracker"/> 
	</bean>

	<!-- Factory bean that creates the Mongo instance --> 
	<bean id="mongo_source" class="org.springframework.data.mongodb.core.MongoFactoryBean">
	 	<!-- <property name="host" value="54.251.152.105:27017"/> --> <!-- Enable when running in local -->
	 	<!-- <property name="host" value="172.31.22.44:27017"/> --> <!-- Enable it when deploying -->
	 	<!-- <property name="host" value="localhost:27017"/> -->
	 	<property name="host" value="${mongo.host}"/>
	</bean>
    
</beans>